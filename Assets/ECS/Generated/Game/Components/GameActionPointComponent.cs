//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ActionPointComponent actionPoint { get { return (ActionPointComponent)GetComponent(GameComponentsLookup.ActionPoint); } }
    public bool hasActionPoint { get { return HasComponent(GameComponentsLookup.ActionPoint); } }

    public void AddActionPoint(ActionPoint newLogic) {
        var index = GameComponentsLookup.ActionPoint;
        var component = (ActionPointComponent)CreateComponent(index, typeof(ActionPointComponent));
        component.logic = newLogic;
        AddComponent(index, component);
    }

    public void ReplaceActionPoint(ActionPoint newLogic) {
        var index = GameComponentsLookup.ActionPoint;
        var component = (ActionPointComponent)CreateComponent(index, typeof(ActionPointComponent));
        component.logic = newLogic;
        ReplaceComponent(index, component);
    }

    public void RemoveActionPoint() {
        RemoveComponent(GameComponentsLookup.ActionPoint);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherActionPoint;

    public static Entitas.IMatcher<GameEntity> ActionPoint {
        get {
            if (_matcherActionPoint == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ActionPoint);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherActionPoint = matcher;
            }

            return _matcherActionPoint;
        }
    }
}
