//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public BasePropertyComponent baseProperty { get { return (BasePropertyComponent)GetComponent(GameComponentsLookup.BaseProperty); } }
    public bool hasBaseProperty { get { return HasComponent(GameComponentsLookup.BaseProperty); } }

    public void AddBaseProperty(float newBaseHealth, float newBaseAttack, float newBaseDefence, float newHealthAdd, float newAttackAdd, float newDefenceAdd, float newHealthPctAdd, float newAttackPctAdd, float newDefencePctAdd, float newHealth, float newAttack, float newDefence) {
        var index = GameComponentsLookup.BaseProperty;
        var component = (BasePropertyComponent)CreateComponent(index, typeof(BasePropertyComponent));
        component.baseHealth = newBaseHealth;
        component.baseAttack = newBaseAttack;
        component.baseDefence = newBaseDefence;
        component.healthAdd = newHealthAdd;
        component.attackAdd = newAttackAdd;
        component.defenceAdd = newDefenceAdd;
        component.healthPctAdd = newHealthPctAdd;
        component.attackPctAdd = newAttackPctAdd;
        component.defencePctAdd = newDefencePctAdd;
        component.health = newHealth;
        component.attack = newAttack;
        component.defence = newDefence;
        AddComponent(index, component);
    }

    public void ReplaceBaseProperty(float newBaseHealth, float newBaseAttack, float newBaseDefence, float newHealthAdd, float newAttackAdd, float newDefenceAdd, float newHealthPctAdd, float newAttackPctAdd, float newDefencePctAdd, float newHealth, float newAttack, float newDefence) {
        var index = GameComponentsLookup.BaseProperty;
        var component = (BasePropertyComponent)CreateComponent(index, typeof(BasePropertyComponent));
        component.baseHealth = newBaseHealth;
        component.baseAttack = newBaseAttack;
        component.baseDefence = newBaseDefence;
        component.healthAdd = newHealthAdd;
        component.attackAdd = newAttackAdd;
        component.defenceAdd = newDefenceAdd;
        component.healthPctAdd = newHealthPctAdd;
        component.attackPctAdd = newAttackPctAdd;
        component.defencePctAdd = newDefencePctAdd;
        component.health = newHealth;
        component.attack = newAttack;
        component.defence = newDefence;
        ReplaceComponent(index, component);
    }

    public void RemoveBaseProperty() {
        RemoveComponent(GameComponentsLookup.BaseProperty);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherBaseProperty;

    public static Entitas.IMatcher<GameEntity> BaseProperty {
        get {
            if (_matcherBaseProperty == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.BaseProperty);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherBaseProperty = matcher;
            }

            return _matcherBaseProperty;
        }
    }
}
