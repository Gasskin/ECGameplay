//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CombatLogicComponent combatLogic { get { return (CombatLogicComponent)GetComponent(GameComponentsLookup.CombatLogic); } }
    public bool hasCombatLogic { get { return HasComponent(GameComponentsLookup.CombatLogic); } }

    public void AddCombatLogic(CombatLogic newLogic) {
        var index = GameComponentsLookup.CombatLogic;
        var component = (CombatLogicComponent)CreateComponent(index, typeof(CombatLogicComponent));
        component.logic = newLogic;
        AddComponent(index, component);
    }

    public void ReplaceCombatLogic(CombatLogic newLogic) {
        var index = GameComponentsLookup.CombatLogic;
        var component = (CombatLogicComponent)CreateComponent(index, typeof(CombatLogicComponent));
        component.logic = newLogic;
        ReplaceComponent(index, component);
    }

    public void RemoveCombatLogic() {
        RemoveComponent(GameComponentsLookup.CombatLogic);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCombatLogic;

    public static Entitas.IMatcher<GameEntity> CombatLogic {
        get {
            if (_matcherCombatLogic == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CombatLogic);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCombatLogic = matcher;
            }

            return _matcherCombatLogic;
        }
    }
}
