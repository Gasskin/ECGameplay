//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AttackActionAbilityComponent attackActionAbility { get { return (AttackActionAbilityComponent)GetComponent(GameComponentsLookup.AttackActionAbility); } }
    public bool hasAttackActionAbility { get { return HasComponent(GameComponentsLookup.AttackActionAbility); } }

    public void AddAttackActionAbility(AttackActionAbility newLogic) {
        var index = GameComponentsLookup.AttackActionAbility;
        var component = (AttackActionAbilityComponent)CreateComponent(index, typeof(AttackActionAbilityComponent));
        component.logic = newLogic;
        AddComponent(index, component);
    }

    public void ReplaceAttackActionAbility(AttackActionAbility newLogic) {
        var index = GameComponentsLookup.AttackActionAbility;
        var component = (AttackActionAbilityComponent)CreateComponent(index, typeof(AttackActionAbilityComponent));
        component.logic = newLogic;
        ReplaceComponent(index, component);
    }

    public void RemoveAttackActionAbility() {
        RemoveComponent(GameComponentsLookup.AttackActionAbility);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAttackActionAbility;

    public static Entitas.IMatcher<GameEntity> AttackActionAbility {
        get {
            if (_matcherAttackActionAbility == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AttackActionAbility);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAttackActionAbility = matcher;
            }

            return _matcherAttackActionAbility;
        }
    }
}
