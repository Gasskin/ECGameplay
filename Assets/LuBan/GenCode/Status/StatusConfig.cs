//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.Status
{ 

public sealed partial class StatusConfig :  Bright.Config.BeanBase 
{
    public StatusConfig(JSONNode _json) 
    {
        { if(!_json["Id"].IsNumber) { throw new SerializationException(); }  Id = _json["Id"]; }
        { if(!_json["CanStack"].IsBoolean) { throw new SerializationException(); }  CanStack = _json["CanStack"]; }
        { if(!_json["StatusType"].IsNumber) { throw new SerializationException(); }  StatusType = (Status.Enum.StatusType)_json["StatusType"].AsInt; }
        { if(!_json["Duration"].IsNumber) { throw new SerializationException(); }  Duration = _json["Duration"]; }
        { if(!_json["StatusControlType"].IsNumber) { throw new SerializationException(); }  StatusControlType = (Status.Enum.StatusControlType)_json["StatusControlType"].AsInt; }
        { if(!_json["StatusPropertyType"].IsNumber) { throw new SerializationException(); }  StatusPropertyType = (Status.Enum.StatusPropertyType)_json["StatusPropertyType"].AsInt; }
        { if(!_json["Interval"].IsNumber) { throw new SerializationException(); }  Interval = _json["Interval"]; }
        PostInit();
    }

    public StatusConfig(int Id, bool CanStack, Status.Enum.StatusType StatusType, float Duration, Status.Enum.StatusControlType StatusControlType, Status.Enum.StatusPropertyType StatusPropertyType, float Interval ) 
    {
        this.Id = Id;
        this.CanStack = CanStack;
        this.StatusType = StatusType;
        this.Duration = Duration;
        this.StatusControlType = StatusControlType;
        this.StatusPropertyType = StatusPropertyType;
        this.Interval = Interval;
        PostInit();
    }

    public static StatusConfig DeserializeStatusConfig(JSONNode _json)
    {
        return new Status.StatusConfig(_json);
    }

    public int Id { get; private set; }
    /// <summary>
    /// 能否叠加
    /// </summary>
    public bool CanStack { get; private set; }
    /// <summary>
    /// 状态类型
    /// </summary>
    public Status.Enum.StatusType StatusType { get; private set; }
    /// <summary>
    /// 持续时间(毫秒)
    /// </summary>
    public float Duration { get; private set; }
    /// <summary>
    /// 控制类型
    /// </summary>
    public Status.Enum.StatusControlType StatusControlType { get; private set; }
    /// <summary>
    /// 属性类型
    /// </summary>
    public Status.Enum.StatusPropertyType StatusPropertyType { get; private set; }
    /// <summary>
    /// 生效间隔(毫秒)
    /// </summary>
    public float Interval { get; private set; }

    public const int __ID__ = 1431073360;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "CanStack:" + CanStack + ","
        + "StatusType:" + StatusType + ","
        + "Duration:" + Duration + ","
        + "StatusControlType:" + StatusControlType + ","
        + "StatusPropertyType:" + StatusPropertyType + ","
        + "Interval:" + Interval + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
