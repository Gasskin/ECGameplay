//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.Skill
{ 

public sealed partial class SkillEffectConfig :  Bright.Config.BeanBase 
{
    public SkillEffectConfig(JSONNode _json) 
    {
        { if(!_json["Id"].IsNumber) { throw new SerializationException(); }  Id = _json["Id"]; }
        { if(!_json["SkillAffectTargetType"].IsNumber) { throw new SerializationException(); }  SkillAffectTargetType = (Skill.Enum.SkillAffectTargetType)_json["SkillAffectTargetType"].AsInt; }
        { if(!_json["Probability"].IsNumber) { throw new SerializationException(); }  Probability = _json["Probability"]; }
        { if(!_json["ValueFormula"].IsString) { throw new SerializationException(); }  ValueFormula = _json["ValueFormula"]; }
        { if(!_json["ValueType"].IsNumber) { throw new SerializationException(); }  ValueType = (Skill.Enum.DamageType)_json["ValueType"].AsInt; }
        { if(!_json["EffectType"].IsNumber) { throw new SerializationException(); }  EffectType = (Skill.Enum.EffectType)_json["EffectType"].AsInt; }
        { if(!_json["CanCritical"].IsBoolean) { throw new SerializationException(); }  CanCritical = _json["CanCritical"]; }
        { if(!_json["AttachStatus"].IsNumber) { throw new SerializationException(); }  AttachStatus = _json["AttachStatus"]; }
        PostInit();
    }

    public SkillEffectConfig(int Id, Skill.Enum.SkillAffectTargetType SkillAffectTargetType, float Probability, string ValueFormula, Skill.Enum.DamageType ValueType, Skill.Enum.EffectType EffectType, bool CanCritical, int AttachStatus ) 
    {
        this.Id = Id;
        this.SkillAffectTargetType = SkillAffectTargetType;
        this.Probability = Probability;
        this.ValueFormula = ValueFormula;
        this.ValueType = ValueType;
        this.EffectType = EffectType;
        this.CanCritical = CanCritical;
        this.AttachStatus = AttachStatus;
        PostInit();
    }

    public static SkillEffectConfig DeserializeSkillEffectConfig(JSONNode _json)
    {
        return new Skill.SkillEffectConfig(_json);
    }

    public int Id { get; private set; }
    /// <summary>
    /// 目标类型
    /// </summary>
    public Skill.Enum.SkillAffectTargetType SkillAffectTargetType { get; private set; }
    /// <summary>
    /// 触发概率
    /// </summary>
    public float Probability { get; private set; }
    /// <summary>
    /// 数值公式
    /// </summary>
    public string ValueFormula { get; private set; }
    /// <summary>
    /// 伤害类型
    /// </summary>
    public Skill.Enum.DamageType ValueType { get; private set; }
    /// <summary>
    /// 效果类型
    /// </summary>
    public Skill.Enum.EffectType EffectType { get; private set; }
    /// <summary>
    /// 能否暴击
    /// </summary>
    public bool CanCritical { get; private set; }
    /// <summary>
    /// 附加状态
    /// </summary>
    public int AttachStatus { get; private set; }
    public Status.StatusConfig AttachStatus_Ref { get; private set; }

    public const int __ID__ = 1262818951;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        this.AttachStatus_Ref = (_tables["Status.StatusTable"] as Status.StatusTable).GetOrDefault(AttachStatus);
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "SkillAffectTargetType:" + SkillAffectTargetType + ","
        + "Probability:" + Probability + ","
        + "ValueFormula:" + ValueFormula + ","
        + "ValueType:" + ValueType + ","
        + "EffectType:" + EffectType + ","
        + "CanCritical:" + CanCritical + ","
        + "AttachStatus:" + AttachStatus + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
